<apex:page controller="FieldEditor" language="en" contentType="text/html; charset=utf-8" showHeader="True" standardStylesheets="True" docType="html-5.0" cache="False" applyHtmlTag="True" applyBodyTag="False">
    

    <link rel="stylesheet" type="text/css" href="https://{!codeServer}/sites/force.com/assets/css/ckeditor.css" />
    <apex:includeScript value="{!$Resource.CKEditor}" />
    <script src="https://{!codeServer}/sites/force.com/assets/js/CKEditorInit.js">
    </script>
    
    <body>

            <apex:form id="foobar">
                <apex:inputTextArea id="editor" value="{!fieldValue}">
                </apex:inputTextArea>
                
                <apex:commandButton action="{!doSubmit}" value="Save" />
                <apex:commandButton action="{!doCancel}" value="Back to Record" />
            </apex:form>


<!--
The "super-build" of CKEditor&nbsp;5 served via CDN contains a large set of plugins and multiple editor types.
See https://ckeditor.com/docs/ckeditor5/latest/installation/getting-started/quick-start.html#running-a-full-featured-editor-from-cdn
-->

        
        <script>  
        
        // This sample still does not showcase all CKEditor&nbsp;5 features (!)
        // Visit https://ckeditor.com/docs/ckeditor5/latest/features/index.html to browse all the features.
            ClassicEditor.create( document.querySelector( '[id*="editor"]' ), ckeditorConfig )
            .then( editor => {
                window.editor = editor;
            } )
            .catch( handleSampleError );



            function handleSampleError( error ) {
                const issueUrl = 'https://github.com/ckeditor/ckeditor5/issues';
                const buildId = '"d8oas6jeiwb7-9wiot14rj9hh"';
                    
                const message = [
                    'Oops, something went wrong!',
                    `Please, report the following error on ${issueUrl} with the build id ${buildId} and the error stack trace:`
                ].join( '\n' );
            
                console.error( message );
                console.error( error );
            }
        
      // initEditor('[id*="editor"').then( eInstance => { editor = eInstance; });

        </script>
    </body>

</apex:page>